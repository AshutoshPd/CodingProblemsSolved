using System;

namespace MinimumPathSum
{
    class Program
    {
        static void Main(string[] args)
        {
            int[,] input = new int[,]{{1,2,3},{4,5,6}};//,{4,2,1}};
            //System.Console.WriteLine( input.GetUpperBound(1)  );
            for(int i = 0; i <= input.GetUpperBound(0) ; i++)
            {
                for(int j=0; j<=input.GetUpperBound(1); j++)
                {
                        //System.Console.WriteLine( input[i,j] );
                }
                
            }
            int res = FindMinPath(input);

            Console.WriteLine("Hello World!" + res);
        }

        static int FindMinPath(int[,] input)
        {
            int res = 0;
            int[,] dp = new int [input.GetUpperBound(0)+1, input.GetUpperBound(1)+1];
            for(int i=0; i<= dp.GetUpperBound(0); i++)
            {
                for(int j=0; j<= dp.GetUpperBound(1); j++)
                {
                    dp[i,j] += input[i,j];
                    if(i>0 && j > 0)
                    {
                        dp[i,j] += Math.Min(dp[i-1,j], dp[i,j-1]);
                    }
                    else if(i>0){
                        dp[i,j] += dp[i-1,j];

                    }
                    else if(j>0)
                    {
                        dp[i,j] += dp[i, j-1];
                    }
                }
            }


            return dp[dp.GetUpperBound(0), dp.GetUpperBound(1)];
        }
    }
}

